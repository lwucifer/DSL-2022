//
// Base styles
//

.#{$prefix}btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size(
    $btn-padding-y,
    $btn-padding-x,
    $btn-font-size,
    $btn-font-weight,
    $btn-border-radius
  );
  transition: $btn-transition;
  
  .#{$prefix}btn__spinner {
    @include spinner-size($btn-font-size);
    margin-right: $btn-padding-x;
  }

  &:hover {
    color: $body-color;
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  .#{$prefix}btn-check:focus + &,
  &:focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  .#{$prefix}btn-check:checked + &,
  .#{$prefix}btn-check:active + &,
  &:active,
  &.active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }

  &:disabled,
  &.disabled,
  &[disabled],
  fieldset:disabled & {
    pointer-events: none;
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .#{$prefix}btn--#{$color} {
    @if ($color == 'primary') {
      @include button-variant($value, $value, #fff, darken($value, 7.5%), null, #fff, darken($value, 10%), null, #fff);
    } @else {
      @include button-variant($value, $value);
    }

    .#{$prefix}btn__spinner {
      @if($color == 'light') {
        @include spinner-variant(color-contrast($value));
      } @else {
        @include spinner-variant(#fff);
      }
    }
  }
}

@each $color, $value in $theme-colors {
  .#{$prefix}btn--outline-#{$color} {
    @if ($color == 'primary') {
      @include button-outline-variant($value, #fff, $value, null, #fff);
    } @else {
      @include button-outline-variant($value);
    }

    .#{$prefix}btn__spinner {
      @include spinner-variant($color);
    }
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.#{$prefix}btn--link {
  font-weight: $font-weight-normal;
  color: $btn-link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.#{$prefix}btn--lg {
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $btn-font-size-lg,
    $btn-font-weight-lg,
    $btn-border-radius-lg
  );

  .#{$prefix}btn__spinner {
    @include spinner-size($btn-font-size-lg);
    margin-right: $btn-padding-x-lg;
  }
}

.#{$prefix}btn--sm {
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $btn-font-size-sm,
    $btn-font-weight-sm,
    $btn-border-radius-sm
  );

  .#{$prefix}btn__spinner {
    @include spinner-size($btn-font-size-sm);
    margin-right: $btn-padding-x-sm;
  }
}


// Square shape
.#{$prefix}btn--square {
  border-radius: 0;
}

// Rounded shape - has border-radius
.#{$prefix}btn--rounded {
  border-radius: $btn-border-radius;

  .#{$prefix}btn--sm & {
    border-radius: $btn-border-radius-sm;
  }

  .#{$prefix}btn--lg & {
    border-radius: $btn-border-radius-lg;
  }
}